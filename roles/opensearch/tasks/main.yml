---
# OpenSearch installation and configuration tasks

# 安装必要的包
- name: Install required packages
  apt:
    name:
      - curl
      - gnupg2
      - lsb-release
      - apt-transport-https
      - ca-certificates
    state: present
    update_cache: yes

# 检查Java版本
- name: Check Java version
  command: java -version
  register: java_version
  ignore_errors: yes

# 安装Java 17
- name: Install Java 17
  apt:
    name: openjdk-17-jdk
    state: present
  when: java_version.rc != 0 or java_version is failed

# 停止现有的OpenSearch服务
- name: Stop OpenSearch service if running
  systemd:
    name: opensearch
    state: stopped
  ignore_errors: yes

# 确保所有OpenSearch进程已终止
- name: Kill any hanging OpenSearch processes
  shell: pkill -9 -f org.opensearch.bootstrap.OpenSearch || true
  changed_when: false
  ignore_errors: yes

# 完全清理现有的 OpenSearch 配置
- name: Completely remove existing OpenSearch
  apt:
    name: opensearch
    state: absent
    purge: yes
  ignore_errors: yes

# 清理现有配置
- name: Remove existing OpenSearch data and config directories
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/opensearch
    - /var/lib/opensearch
    - /var/log/opensearch
    - /usr/share/opensearch
    - /var/run/opensearch
    - /etc/systemd/system/opensearch.service.d
  ignore_errors: yes

# 添加OpenSearch GPG密钥
- name: Add OpenSearch GPG key
  apt_key:
    url: https://artifacts.opensearch.org/publickeys/opensearch.pgp
    state: present

# 添加OpenSearch仓库
- name: Add OpenSearch repository
  apt_repository:
    repo: "deb https://artifacts.opensearch.org/releases/bundle/opensearch/2.x/apt stable main"
    state: present
    filename: opensearch
    update_cache: yes

# 配置系统限制
- name: Configure system limits
  copy:
    dest: /etc/security/limits.d/opensearch.conf
    content: |
      opensearch soft nofile 65535
      opensearch hard nofile 65535
      opensearch soft nproc 4096
      opensearch hard nproc 4096
      opensearch soft memlock unlimited
      opensearch hard memlock unlimited
    mode: '0644'

# 设置VM.max_map_count
- name: 配置系统内核参数
  copy:
    dest: /etc/sysctl.d/99-opensearch.conf
    content: |
      # OpenSearch kernel参数
      vm.max_map_count = 262144
      vm.swappiness = 1
    mode: '0644'
    owner: root
    group: root

# 应用系统参数
- name: 应用系统参数
  shell: sysctl -p /etc/sysctl.d/99-opensearch.conf
  changed_when: false
  ignore_errors: yes

# 创建OpenSearch用户和组
- name: Create opensearch group
  group:
    name: opensearch
    state: present
    system: yes

- name: Create opensearch user
  user:
    name: opensearch
    group: opensearch
    shell: /bin/false
    system: yes
    create_home: no
    home: /usr/share/opensearch
    comment: "OpenSearch user"

# 创建必要的目录
- name: Create OpenSearch directories
  file:
    path: "{{ item }}"
    state: directory
    owner: opensearch
    group: opensearch
    mode: '0755'
  with_items:
    - "{{ opensearch_data_path }}"
    - "{{ opensearch_logs_path }}"
    - /etc/opensearch

# 预先创建demo配置日志文件以避免安装过程中的错误
- name: Create demo configuration log file
  file:
    path: /var/log/opensearch/install_demo_configuration.log
    state: touch
    owner: opensearch
    group: opensearch
    mode: '0644'
  ignore_errors: yes

# 创建systemd覆盖目录
- name: Create systemd override directory for OpenSearch
  file:
    path: /etc/systemd/system/opensearch.service.d
    state: directory
    mode: '0755'

# 配置systemd覆盖
- name: Configure systemd override for OpenSearch
  copy:
    dest: /etc/systemd/system/opensearch.service.d/override.conf
    content: |
      [Service]
      LimitNOFILE={{ opensearch_nofile_limit }}
      LimitNPROC={{ opensearch_nproc_limit }}
      LimitMEMLOCK=infinity
      TimeoutStartSec=300
      Restart=always
      RestartSec=60s
      # 显式设置JVM参数覆盖默认值
      Environment="OPENSEARCH_JAVA_OPTS=-Xms{{ opensearch_heap_size }} -Xmx{{ opensearch_heap_size }}"
      Environment="DISABLE_SECURITY_PLUGIN=true"
    mode: '0644'

# 手动创建一个基础配置
- name: Create minimal opensearch.yml
  copy:
    dest: /etc/opensearch/opensearch.yml
    content: |
      # Minimal configuration
      cluster.name: opensearch-cluster
      node.name: node-1
      path.data: /var/lib/opensearch
      path.logs: /var/log/opensearch
      network.host: 0.0.0.0
      http.port: 9200
      discovery.type: single-node
      plugins.security.ssl.http.enabled: false
      plugins.security.disabled: true
      bootstrap.memory_lock: false
      action.auto_create_index: true
    mode: '0640'
    owner: opensearch
    group: opensearch
  notify: restart opensearch

# 配置JVM选项
- name: Configure JVM options
  template:
    src: jvm.options.j2
    dest: /etc/opensearch/jvm.options
    owner: opensearch
    group: opensearch
    mode: '0644'
  notify: restart opensearch

# 禁用性能分析器
- name: Create opensearch-performance-analyzer directory
  file:
    path: /etc/opensearch/opensearch-performance-analyzer
    state: directory
    owner: opensearch
    group: opensearch
    mode: '0755'
  ignore_errors: yes

- name: Disable performance-analyzer plugin
  copy:
    dest: /etc/opensearch/opensearch-performance-analyzer/performance-analyzer.properties
    content: |
      # 禁用性能分析器
      # 这是一个空配置文件，防止性能分析器启动
    mode: '0644'
    owner: opensearch
    group: opensearch
  ignore_errors: yes
  notify: restart opensearch

# 安装OpenSearch
- name: Install OpenSearch
  apt:
    name: opensearch
    state: present
    update_cache: yes

# 确保配置文件权限正确
- name: Update OpenSearch configuration permissions
  file:
    path: "{{ item }}"
    owner: opensearch
    group: opensearch
    mode: '0640'
  with_items:
    - /etc/opensearch/opensearch.yml
    - /etc/opensearch/jvm.options
  ignore_errors: yes

# 重新加载systemd配置
- name: 重新加载systemd配置
  systemd:
    daemon_reload: yes

# 启动OpenSearch服务
- name: 启用并启动OpenSearch服务
  systemd:
    name: opensearch
    state: started
    enabled: yes
  register: opensearch_start_result
  ignore_errors: yes

# 如果启动失败，收集日志来帮助诊断
- name: 获取OpenSearch服务状态
  shell: systemctl status opensearch
  register: opensearch_service_status
  changed_when: false
  ignore_errors: yes
  when: opensearch_start_result is failed

- name: 显示OpenSearch服务状态
  debug:
    msg: "{{ opensearch_service_status.stdout_lines | default('No output') }}"
  when: opensearch_service_status is defined

- name: 检查OpenSearch日志
  shell: journalctl -u opensearch --no-pager -n 50
  register: opensearch_journal
  changed_when: false
  ignore_errors: yes
  when: opensearch_start_result is failed

- name: 显示OpenSearch日志
  debug:
    msg: "{{ opensearch_journal.stdout_lines | default('No logs available') }}"
  when: opensearch_journal is defined

- name: 检查JVM参数是否被正确应用
  shell: ps -ef | grep opensearch | grep java
  register: opensearch_process
  changed_when: false
  ignore_errors: yes
  when: opensearch_start_result is failed

- name: 显示OpenSearch进程参数
  debug:
    msg: "{{ opensearch_process.stdout_lines | default('No OpenSearch process running') }}"
  when: opensearch_process is defined

# 等待OpenSearch启动
- name: Wait for OpenSearch to start
  uri:
    url: "http://localhost:{{ opensearch_http_port }}"
    method: GET
    status_code: 200
  register: result
  until: result.status == 200
  retries: 30
  delay: 10
  ignore_errors: yes

# 检查 OpenSearch API 健康状态
- name: Test OpenSearch API responsiveness (default port)
  shell: |
    curl -s -o /dev/null -w "%{http_code}" http://localhost:9200 || echo "Failed"
  register: opensearch_http_status
  changed_when: false
  ignore_errors: yes

- name: Display OpenSearch HTTP status
  debug:
    msg: "OpenSearch HTTP状态码: {{ opensearch_http_status.stdout }}"
  
- name: Test OpenSearch API health status (if HTTP status is 200)
  uri:
    url: http://localhost:9200/_cluster/health
    method: GET
    body_format: json
    status_code: 200
    timeout: 10
  register: opensearch_health
  ignore_errors: yes
  when: opensearch_http_status.stdout == "200"
  
- name: Display OpenSearch health status
  debug:
    msg: "OpenSearch健康状态: {{ opensearch_health.json.status | default('unknown') }}"
  when: opensearch_health is defined and opensearch_health.json is defined 