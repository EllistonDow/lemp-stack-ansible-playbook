---
# Percona Server installation and configuration tasks

- name: Install required packages
  apt:
    name:
      - gnupg2
      - curl
      - software-properties-common
      - wget
    state: present
    update_cache: yes

- name: Download Percona repository package
  get_url:
    url: https://repo.percona.com/apt/percona-release_latest.generic_all.deb
    dest: /tmp/percona-release_latest.generic_all.deb
    mode: '0644'

- name: Install Percona repository package
  apt:
    deb: /tmp/percona-release_latest.generic_all.deb
    state: present
  register: percona_repo_installed

- name: Setup Percona Server 8.0 repository
  command: percona-release setup ps80
  when: percona_repo_installed.changed
  ignore_errors: yes

- name: Update apt cache after adding Percona repository
  apt:
    update_cache: yes

# 确保 /etc/mysql 目录存在
- name: Ensure MySQL configuration directory exists
  file:
    path: /etc/mysql
    state: directory
    owner: root
    group: root
    mode: '0755'

# 备份原始配置文件（如果存在）
- name: Backup original my.cnf if it exists
  copy:
    src: /etc/mysql/my.cnf
    dest: /etc/mysql/my.cnf.original
    remote_src: yes
  ignore_errors: yes

# 正确处理 my.cnf 替代项
- name: Check if my.cnf is in alternatives system
  command: update-alternatives --display my.cnf
  register: alternatives_check
  ignore_errors: yes
  changed_when: false

- name: Configure my.cnf in alternatives system if not already
  command: update-alternatives --install /etc/my.cnf my.cnf /etc/mysql/my.cnf 100
  when: alternatives_check.rc != 0
  ignore_errors: yes

# 创建默认的 MYSQLD_OPTS 环境变量文件
- name: Create MySQL default environment file
  copy:
    dest: /etc/default/mysql
    content: |
      # Default options for MySQL
      MYSQLD_OPTS="--user=mysql"
    mode: '0644'
    owner: root
    group: root

- name: Install Percona Server
  apt:
    name:
      - percona-server-server=8.0.41-32-1.noble
      - percona-server-client=8.0.41-32-1.noble
      - percona-server-common=8.0.41-32-1.noble
    state: present
    update_cache: yes
  ignore_errors: yes

- name: Configure Percona Server
  template:
    src: my.cnf.j2
    dest: /etc/mysql/my.cnf
    owner: root
    group: root
    mode: '0644'
  notify: restart mysql

# 修复 MySQL 服务单元文件
- name: Fix MySQL service unit file
  copy:
    dest: /usr/lib/systemd/system/mysql.service
    content: |
      #
      # Percona Server systemd service file
      #
      
      [Unit]
      Description=Percona Server
      After=network.target
      After=local-fs.target remote-fs.target
      Requires=local-fs.target remote-fs.target
      
      [Install]
      WantedBy=multi-user.target
      
      [Service]
      User=mysql
      Group=mysql
      Type=notify
      PermissionsStartOnly=true
      ExecStartPre=/usr/share/mysql/mysql-systemd-start pre
      EnvironmentFile=-/etc/default/mysql
      ExecStart=/usr/sbin/mysqld --user=mysql
      TimeoutSec=600
      LimitNOFILE = 10000
      Restart=on-failure
      RestartPreventExitStatus=1
      # Always restart when mysqld exits with exit code of 16. This special exit code
      # is used by mysqld for RESTART SQL.
      RestartForceExitStatus=16
      # Set enviroment variable MYSQLD_PARENT_PID. This is required for restart.
      Environment=MYSQLD_PARENT_PID=1
      RuntimeDirectory=mysqld
      RuntimeDirectoryMode=755
    mode: '0644'
    owner: root
    group: root

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes

- name: Start and enable MySQL service
  systemd:
    name: mysql
    state: started
    enabled: yes

# 跳过设置root密码的步骤，因为在Ubuntu 24.04上可能会失败
# - name: Set MySQL root password
#   mysql_user:
#     name: root
#     password: "{{ mysql_root_password }}"
#     host_all: yes
#     state: present
#   no_log: true
#   when: mysql_root_password is defined

# 跳过创建数据库和用户的步骤，因为它们依赖于root密码
# - name: Create MySQL database
#   mysql_db:
#     name: "{{ mysql_database }}"
#     state: present
#   when: mysql_database is defined
#
# - name: Create MySQL user
#   mysql_user:
#     name: "{{ mysql_user }}"
#     password: "{{ mysql_password }}"
#     priv: "{{ mysql_database }}.*:ALL"
#     host: "{{ mysql_host | default('%') }}"
#     state: present
#   no_log: true
#   when: mysql_user is defined and mysql_password is defined and mysql_database is defined

- name: Allow MySQL through UFW
  ufw:
    rule: allow
    port: 3306
    proto: tcp 