---
# Smart LEMP Stack Playbook for Ubuntu 24.04
- name: Smart Install LEMP Stack and Additional Components
  hosts: all
  become: true
  gather_facts: true

  pre_tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

    # 确保系统干净，没有锁定的包管理器
    - name: Check for dpkg locks
      shell: lsof /var/lib/dpkg/lock* 2>/dev/null || echo "No locks"
      register: dpkg_locks
      changed_when: false

    - name: Wait for dpkg locks to be released
      pause:
        seconds: 10
      when: dpkg_locks.stdout != "No locks"

    - name: Fix any broken packages
      shell: dpkg --configure -a
      changed_when: false
      ignore_errors: yes

    - name: Copy detection script
      copy:
        src: detect_components.sh
        dest: /tmp/detect_components.sh
        mode: '0755'

    - name: Run detection script
      shell: /tmp/detect_components.sh
      register: detection_result
      changed_when: false

    - name: Parse detection results
      set_fact:
        components_status: "{{ dict(detection_result.stdout_lines | map('split', '=')) }}"

    - name: Display detected components
      debug:
        var: components_status

    # 检查系统内存
    - name: Check system memory
      shell: free -m | grep Mem | awk '{print $2}'
      register: system_memory
      changed_when: false

    - name: Display system memory
      debug:
        msg: "System memory: {{ system_memory.stdout }}MB"

    - name: Warn if system memory is low
      debug:
        msg: "WARNING: System memory ({{ system_memory.stdout }}MB) is less than recommended 4GB for OpenSearch. Performance may be affected."
      when: system_memory.stdout|int < 4000

    # 清理任何现有的 MySQL 配置问题
    - name: Clean MySQL environment
      block:
        - name: Check if MySQL service exists
          stat:
            path: /usr/lib/systemd/system/mysql.service
          register: mysql_service_exists

        - name: Stop MySQL service if running
          systemd:
            name: mysql
            state: stopped
          ignore_errors: yes
          when: mysql_service_exists.stat.exists

        - name: Create MySQL default environment file
          copy:
            dest: /etc/default/mysql
            content: |
              # Default options for MySQL
              MYSQLD_OPTS="--user=mysql"
            mode: '0644'
            owner: root
            group: root
          when: mysql_service_exists.stat.exists
      when: components_status.percona == 'not_installed'

    # 清理任何现有的 OpenSearch 配置问题
    - name: Clean OpenSearch environment
      block:
        - name: Check if OpenSearch service exists and is not already installed
          stat:
            path: /usr/lib/systemd/system/opensearch.service
          register: opensearch_service_exists
          when: components_status.opensearch == 'not_installed'

        - name: Stop OpenSearch service if running and needs reinstallation
          systemd:
            name: opensearch
            state: stopped
          ignore_errors: yes
          when: components_status.opensearch == 'not_installed' and opensearch_service_exists.stat is defined and opensearch_service_exists.stat.exists
        
        - name: Remove existing demo configuration log
          file:
            path: /var/log/opensearch/install_demo_configuration.log
            state: absent
          ignore_errors: yes
          when: components_status.opensearch == 'not_installed'
          
        # 增加OpenSearch系统限制设置
        - name: Configure system limits for OpenSearch
          copy:
            dest: /etc/security/limits.d/opensearch.conf
            content: |
              # OpenSearch系统限制配置
              opensearch soft nofile 65536
              opensearch hard nofile 65536
              opensearch soft nproc 4096
              opensearch hard nproc 4096
              opensearch soft memlock unlimited
              opensearch hard memlock unlimited
              root soft memlock unlimited
              root hard memlock unlimited
            mode: '0644'
            owner: root
            group: root
          ignore_errors: yes
          when: components_status.opensearch == 'not_installed'
      when: components_status.opensearch == 'not_installed'

    # 清理任何现有的 RabbitMQ 配置问题
    - name: Clean RabbitMQ environment
      block:
        - name: Check if RabbitMQ service exists
          stat:
            path: /usr/lib/systemd/system/rabbitmq-server.service
          register: rabbitmq_service_exists

        - name: Stop RabbitMQ service if running
          systemd:
            name: rabbitmq-server
            state: stopped
          ignore_errors: yes
          when: rabbitmq_service_exists.stat.exists

        - name: Kill any existing RabbitMQ processes
          shell: pkill -9 -f beam.smp || true
          changed_when: false
          ignore_errors: yes
          
        - name: Clean existing RabbitMQ data
          file:
            path: "{{ item }}"
            state: absent
          with_items:
            - /var/lib/rabbitmq
            - /var/log/rabbitmq
            - /etc/rabbitmq
          ignore_errors: yes
      when: components_status.rabbitmq == 'not_installed'

    # 设置 OpenSearch 变量
    - name: Set OpenSearch variables
      set_fact:
        opensearch_heap_size: "16g"
        opensearch_security_enabled: false
      when: components_status.opensearch == 'not_installed'

  roles:
    - role: common

    - role: nginx
      when: components_status.nginx == 'not_installed'

    - role: php
      when: components_status.php == 'not_installed'

    - role: composer
      when: components_status.composer == 'not_installed'

    - role: percona
      when: components_status.percona == 'not_installed'

    - role: redis
      when: components_status.redis == 'not_installed'

    - role: rabbitmq
      when: components_status.rabbitmq == 'not_installed'

    - role: varnish
      when: components_status.varnish == 'not_installed'

    - role: opensearch
      when: components_status.opensearch == 'not_installed'

    - role: fail2ban
      when: components_status.fail2ban == 'not_installed'

    - role: certbot
      when: components_status.certbot == 'not_installed'

    - role: phpmyadmin
      when: components_status.phpmyadmin == 'not_installed'

    - role: webmin
      when: components_status.webmin == 'not_installed'

  post_tasks:
    # 修复可能的服务问题
    - name: Fix MySQL service if needed
      block:
        - name: Check MySQL service status
          command: systemctl status mysql
          register: mysql_status
          failed_when: false
          changed_when: false

        - name: Fix MySQL service unit file if needed
          copy:
            dest: /usr/lib/systemd/system/mysql.service
            content: |
              #
              # Percona Server systemd service file
              #
              
              [Unit]
              Description=Percona Server
              After=network.target
              After=local-fs.target remote-fs.target
              Requires=local-fs.target remote-fs.target
              
              [Install]
              WantedBy=multi-user.target
              
              [Service]
              User=mysql
              Group=mysql
              Type=notify
              PermissionsStartOnly=true
              ExecStartPre=/usr/share/mysql/mysql-systemd-start pre
              EnvironmentFile=-/etc/default/mysql
              ExecStart=/usr/sbin/mysqld --user=mysql
              TimeoutSec=600
              LimitNOFILE = 10000
              Restart=on-failure
              RestartPreventExitStatus=1
              # Always restart when mysqld exits with exit code of 16. This special exit code
              # is used by mysqld for RESTART SQL.
              RestartForceExitStatus=16
              # Set enviroment variable MYSQLD_PARENT_PID. This is required for restart.
              Environment=MYSQLD_PARENT_PID=1
              RuntimeDirectory=mysqld
              RuntimeDirectoryMode=755
            mode: '0644'
            owner: root
            group: root
          when: mysql_status.rc != 0

        - name: Reload systemd daemon
          systemd:
            daemon_reload: yes
          when: mysql_status.rc != 0

        - name: Restart MySQL service
          systemd:
            name: mysql
            state: restarted
          ignore_errors: yes
          when: mysql_status.rc != 0
      ignore_errors: yes

    # 修复 OpenSearch 服务
    - name: Fix OpenSearch service if needed
      block:
        - name: Check OpenSearch service status
          command: systemctl status opensearch
          register: opensearch_status
          failed_when: false
          changed_when: false

        - name: Create OpenSearch systemd override directory
          file:
            path: /etc/systemd/system/opensearch.service.d
            state: directory
            owner: root
            group: root
            mode: '0755'
          when: opensearch_status.rc != 0

        - name: Create OpenSearch systemd override file
          copy:
            dest: /etc/systemd/system/opensearch.service.d/override.conf
            content: |
              [Service]
              LimitMEMLOCK=infinity
              LimitNOFILE=65536
              LimitNPROC=4096
              TimeoutStartSec=300
            mode: '0644'
            owner: root
            group: root
          when: opensearch_status.rc != 0
          
        - name: Verify OpenSearch configuration
          lineinfile:
            path: /etc/opensearch/opensearch.yml
            line: 'bootstrap.memory_lock: false'
            regexp: '^bootstrap.memory_lock:'
            state: present
          ignore_errors: yes
          when: opensearch_status.rc != 0

        - name: Reload systemd daemon
          systemd:
            daemon_reload: yes
          when: opensearch_status.rc != 0

        - name: Restart OpenSearch service
          systemd:
            name: opensearch
            state: restarted
          ignore_errors: yes
          when: opensearch_status.rc != 0
          
        - name: Wait for OpenSearch to start
          wait_for:
            host: 127.0.0.1
            port: 9200
            delay: 10
            timeout: 180
          ignore_errors: yes
          when: opensearch_status.rc != 0
      ignore_errors: yes
      
    # 修复 RabbitMQ 服务
    - name: Fix RabbitMQ service if needed
      block:
        - name: Check RabbitMQ service status
          command: systemctl status rabbitmq-server
          register: rabbitmq_status
          failed_when: false
          changed_when: false

        - name: Ensure RabbitMQ environment file exists
          copy:
            dest: /etc/default/rabbitmq-server
            content: |
              # RabbitMQ服务器环境变量
              RABBITMQ_ULIMIT_NOFILES=65535
              RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS="-setcookie rabbitmq-cookie"
              RABBITMQ_SERVER_START_ARGS=""
            mode: '0644'
            owner: root
            group: root
          when: rabbitmq_status.rc != 0
        
        - name: Verify RabbitMQ configuration
          lineinfile:
            path: /etc/rabbitmq/rabbitmq.conf
            line: 'vm_memory_high_watermark.absolute = 1024MB'
            regexp: '^vm_memory_high_watermark'
            state: present
          ignore_errors: yes
          when: rabbitmq_status.rc != 0
          
        - name: Kill any existing RabbitMQ processes
          shell: pkill -9 -f beam.smp || true
          changed_when: false
          ignore_errors: yes
          when: rabbitmq_status.rc != 0

        - name: Reload systemd daemon
          systemd:
            daemon_reload: yes
          when: rabbitmq_status.rc != 0

        - name: Restart RabbitMQ service
          systemd:
            name: rabbitmq-server
            state: restarted
          ignore_errors: yes
          when: rabbitmq_status.rc != 0
          
        - name: Wait for RabbitMQ to start
          wait_for:
            host: 127.0.0.1
            port: 5672
            delay: 10
            timeout: 60
          ignore_errors: yes
          when: rabbitmq_status.rc != 0
      ignore_errors: yes

    - name: Run detection script after installation
      shell: /tmp/detect_components.sh
      register: final_detection_result
      changed_when: false

    - name: Parse final detection results
      set_fact:
        final_components_status: "{{ dict(final_detection_result.stdout_lines | map('split', '=')) }}"

    - name: Display final installation status
      debug:
        msg: |
          ===== LEMP Stack Installation Summary =====
          {% for component, status in final_components_status.items() %}
          {{ component }}: {{ status }}
          {% endfor %}
          
          如果OpenSearch或RabbitMQ显示为"未安装"状态，可以尝试运行修复脚本:
          - OpenSearch: sudo ansible-playbook -i inventory.yml fix-opensearch-connection.yml
          - RabbitMQ: sudo ansible-playbook -i inventory.yml fix-rabbitmq-startup.yml
          - 全部修复: sudo ansible-playbook -i inventory.yml fix-all-services.yml 